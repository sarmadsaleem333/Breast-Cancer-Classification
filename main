{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30732,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"\n\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\n\nfrom sklearn.model_selection import train_test_split\nimport sklearn.datasets","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-06-18T17:25:39.095883Z","iopub.execute_input":"2024-06-18T17:25:39.096522Z","iopub.status.idle":"2024-06-18T17:25:39.104484Z","shell.execute_reply.started":"2024-06-18T17:25:39.096490Z","shell.execute_reply":"2024-06-18T17:25:39.103029Z"},"trusted":true},"execution_count":57,"outputs":[]},{"cell_type":"code","source":"breast_cancer_data_set=sklearn.datasets.load_breast_cancer()\n","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:39.614134Z","iopub.execute_input":"2024-06-18T17:25:39.615051Z","iopub.status.idle":"2024-06-18T17:25:39.633435Z","shell.execute_reply.started":"2024-06-18T17:25:39.615016Z","shell.execute_reply":"2024-06-18T17:25:39.631957Z"},"trusted":true},"execution_count":58,"outputs":[]},{"cell_type":"code","source":"breast_cancer_data_set\n","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:40.204937Z","iopub.execute_input":"2024-06-18T17:25:40.205381Z","iopub.status.idle":"2024-06-18T17:25:40.220371Z","shell.execute_reply.started":"2024-06-18T17:25:40.205350Z","shell.execute_reply":"2024-06-18T17:25:40.218678Z"},"trusted":true},"execution_count":59,"outputs":[{"execution_count":59,"output_type":"execute_result","data":{"text/plain":"{'data': array([[1.799e+01, 1.038e+01, 1.228e+02, ..., 2.654e-01, 4.601e-01,\n         1.189e-01],\n        [2.057e+01, 1.777e+01, 1.329e+02, ..., 1.860e-01, 2.750e-01,\n         8.902e-02],\n        [1.969e+01, 2.125e+01, 1.300e+02, ..., 2.430e-01, 3.613e-01,\n         8.758e-02],\n        ...,\n        [1.660e+01, 2.808e+01, 1.083e+02, ..., 1.418e-01, 2.218e-01,\n         7.820e-02],\n        [2.060e+01, 2.933e+01, 1.401e+02, ..., 2.650e-01, 4.087e-01,\n         1.240e-01],\n        [7.760e+00, 2.454e+01, 4.792e+01, ..., 0.000e+00, 2.871e-01,\n         7.039e-02]]),\n 'target': array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,\n        0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0,\n        1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0,\n        1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n        1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n        0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n        1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1,\n        1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0,\n        0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0,\n        1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1,\n        1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1,\n        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n        1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0,\n        0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n        0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0,\n        1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1,\n        1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0,\n        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1,\n        1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\n        1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n        1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1,\n        1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n        1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1]),\n 'frame': None,\n 'target_names': array(['malignant', 'benign'], dtype='<U9'),\n 'DESCR': '.. _breast_cancer_dataset:\\n\\nBreast cancer wisconsin (diagnostic) dataset\\n--------------------------------------------\\n\\n**Data Set Characteristics:**\\n\\n    :Number of Instances: 569\\n\\n    :Number of Attributes: 30 numeric, predictive attributes and the class\\n\\n    :Attribute Information:\\n        - radius (mean of distances from center to points on the perimeter)\\n        - texture (standard deviation of gray-scale values)\\n        - perimeter\\n        - area\\n        - smoothness (local variation in radius lengths)\\n        - compactness (perimeter^2 / area - 1.0)\\n        - concavity (severity of concave portions of the contour)\\n        - concave points (number of concave portions of the contour)\\n        - symmetry\\n        - fractal dimension (\"coastline approximation\" - 1)\\n\\n        The mean, standard error, and \"worst\" or largest (mean of the three\\n        worst/largest values) of these features were computed for each image,\\n        resulting in 30 features.  For instance, field 0 is Mean Radius, field\\n        10 is Radius SE, field 20 is Worst Radius.\\n\\n        - class:\\n                - WDBC-Malignant\\n                - WDBC-Benign\\n\\n    :Summary Statistics:\\n\\n    ===================================== ====== ======\\n                                           Min    Max\\n    ===================================== ====== ======\\n    radius (mean):                        6.981  28.11\\n    texture (mean):                       9.71   39.28\\n    perimeter (mean):                     43.79  188.5\\n    area (mean):                          143.5  2501.0\\n    smoothness (mean):                    0.053  0.163\\n    compactness (mean):                   0.019  0.345\\n    concavity (mean):                     0.0    0.427\\n    concave points (mean):                0.0    0.201\\n    symmetry (mean):                      0.106  0.304\\n    fractal dimension (mean):             0.05   0.097\\n    radius (standard error):              0.112  2.873\\n    texture (standard error):             0.36   4.885\\n    perimeter (standard error):           0.757  21.98\\n    area (standard error):                6.802  542.2\\n    smoothness (standard error):          0.002  0.031\\n    compactness (standard error):         0.002  0.135\\n    concavity (standard error):           0.0    0.396\\n    concave points (standard error):      0.0    0.053\\n    symmetry (standard error):            0.008  0.079\\n    fractal dimension (standard error):   0.001  0.03\\n    radius (worst):                       7.93   36.04\\n    texture (worst):                      12.02  49.54\\n    perimeter (worst):                    50.41  251.2\\n    area (worst):                         185.2  4254.0\\n    smoothness (worst):                   0.071  0.223\\n    compactness (worst):                  0.027  1.058\\n    concavity (worst):                    0.0    1.252\\n    concave points (worst):               0.0    0.291\\n    symmetry (worst):                     0.156  0.664\\n    fractal dimension (worst):            0.055  0.208\\n    ===================================== ====== ======\\n\\n    :Missing Attribute Values: None\\n\\n    :Class Distribution: 212 - Malignant, 357 - Benign\\n\\n    :Creator:  Dr. William H. Wolberg, W. Nick Street, Olvi L. Mangasarian\\n\\n    :Donor: Nick Street\\n\\n    :Date: November, 1995\\n\\nThis is a copy of UCI ML Breast Cancer Wisconsin (Diagnostic) datasets.\\nhttps://goo.gl/U2Uwz2\\n\\nFeatures are computed from a digitized image of a fine needle\\naspirate (FNA) of a breast mass.  They describe\\ncharacteristics of the cell nuclei present in the image.\\n\\nSeparating plane described above was obtained using\\nMultisurface Method-Tree (MSM-T) [K. P. Bennett, \"Decision Tree\\nConstruction Via Linear Programming.\" Proceedings of the 4th\\nMidwest Artificial Intelligence and Cognitive Science Society,\\npp. 97-101, 1992], a classification method which uses linear\\nprogramming to construct a decision tree.  Relevant features\\nwere selected using an exhaustive search in the space of 1-4\\nfeatures and 1-3 separating planes.\\n\\nThe actual linear program used to obtain the separating plane\\nin the 3-dimensional space is that described in:\\n[K. P. Bennett and O. L. Mangasarian: \"Robust Linear\\nProgramming Discrimination of Two Linearly Inseparable Sets\",\\nOptimization Methods and Software 1, 1992, 23-34].\\n\\nThis database is also available through the UW CS ftp server:\\n\\nftp ftp.cs.wisc.edu\\ncd math-prog/cpo-dataset/machine-learn/WDBC/\\n\\n.. topic:: References\\n\\n   - W.N. Street, W.H. Wolberg and O.L. Mangasarian. Nuclear feature extraction \\n     for breast tumor diagnosis. IS&T/SPIE 1993 International Symposium on \\n     Electronic Imaging: Science and Technology, volume 1905, pages 861-870,\\n     San Jose, CA, 1993.\\n   - O.L. Mangasarian, W.N. Street and W.H. Wolberg. Breast cancer diagnosis and \\n     prognosis via linear programming. Operations Research, 43(4), pages 570-577, \\n     July-August 1995.\\n   - W.H. Wolberg, W.N. Street, and O.L. Mangasarian. Machine learning techniques\\n     to diagnose breast cancer from fine-needle aspirates. Cancer Letters 77 (1994) \\n     163-171.',\n 'feature_names': array(['mean radius', 'mean texture', 'mean perimeter', 'mean area',\n        'mean smoothness', 'mean compactness', 'mean concavity',\n        'mean concave points', 'mean symmetry', 'mean fractal dimension',\n        'radius error', 'texture error', 'perimeter error', 'area error',\n        'smoothness error', 'compactness error', 'concavity error',\n        'concave points error', 'symmetry error',\n        'fractal dimension error', 'worst radius', 'worst texture',\n        'worst perimeter', 'worst area', 'worst smoothness',\n        'worst compactness', 'worst concavity', 'worst concave points',\n        'worst symmetry', 'worst fractal dimension'], dtype='<U23'),\n 'filename': 'breast_cancer.csv',\n 'data_module': 'sklearn.datasets.data'}"},"metadata":{}}]},{"cell_type":"code","source":"data_frame=pd.DataFrame(breast_cancer_data_set.data,columns=breast_cancer_data_set.feature_names)\n","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:40.714091Z","iopub.execute_input":"2024-06-18T17:25:40.715509Z","iopub.status.idle":"2024-06-18T17:25:40.722130Z","shell.execute_reply.started":"2024-06-18T17:25:40.715469Z","shell.execute_reply":"2024-06-18T17:25:40.720815Z"},"trusted":true},"execution_count":60,"outputs":[]},{"cell_type":"code","source":"\ndata_frame.head()\n","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:41.311819Z","iopub.execute_input":"2024-06-18T17:25:41.312395Z","iopub.status.idle":"2024-06-18T17:25:41.348865Z","shell.execute_reply.started":"2024-06-18T17:25:41.312360Z","shell.execute_reply":"2024-06-18T17:25:41.347356Z"},"trusted":true},"execution_count":61,"outputs":[{"execution_count":61,"output_type":"execute_result","data":{"text/plain":"   mean radius  mean texture  mean perimeter  mean area  mean smoothness  \\\n0        17.99         10.38          122.80     1001.0          0.11840   \n1        20.57         17.77          132.90     1326.0          0.08474   \n2        19.69         21.25          130.00     1203.0          0.10960   \n3        11.42         20.38           77.58      386.1          0.14250   \n4        20.29         14.34          135.10     1297.0          0.10030   \n\n   mean compactness  mean concavity  mean concave points  mean symmetry  \\\n0           0.27760          0.3001              0.14710         0.2419   \n1           0.07864          0.0869              0.07017         0.1812   \n2           0.15990          0.1974              0.12790         0.2069   \n3           0.28390          0.2414              0.10520         0.2597   \n4           0.13280          0.1980              0.10430         0.1809   \n\n   mean fractal dimension  ...  worst radius  worst texture  worst perimeter  \\\n0                 0.07871  ...         25.38          17.33           184.60   \n1                 0.05667  ...         24.99          23.41           158.80   \n2                 0.05999  ...         23.57          25.53           152.50   \n3                 0.09744  ...         14.91          26.50            98.87   \n4                 0.05883  ...         22.54          16.67           152.20   \n\n   worst area  worst smoothness  worst compactness  worst concavity  \\\n0      2019.0            0.1622             0.6656           0.7119   \n1      1956.0            0.1238             0.1866           0.2416   \n2      1709.0            0.1444             0.4245           0.4504   \n3       567.7            0.2098             0.8663           0.6869   \n4      1575.0            0.1374             0.2050           0.4000   \n\n   worst concave points  worst symmetry  worst fractal dimension  \n0                0.2654          0.4601                  0.11890  \n1                0.1860          0.2750                  0.08902  \n2                0.2430          0.3613                  0.08758  \n3                0.2575          0.6638                  0.17300  \n4                0.1625          0.2364                  0.07678  \n\n[5 rows x 30 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>mean radius</th>\n      <th>mean texture</th>\n      <th>mean perimeter</th>\n      <th>mean area</th>\n      <th>mean smoothness</th>\n      <th>mean compactness</th>\n      <th>mean concavity</th>\n      <th>mean concave points</th>\n      <th>mean symmetry</th>\n      <th>mean fractal dimension</th>\n      <th>...</th>\n      <th>worst radius</th>\n      <th>worst texture</th>\n      <th>worst perimeter</th>\n      <th>worst area</th>\n      <th>worst smoothness</th>\n      <th>worst compactness</th>\n      <th>worst concavity</th>\n      <th>worst concave points</th>\n      <th>worst symmetry</th>\n      <th>worst fractal dimension</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>17.99</td>\n      <td>10.38</td>\n      <td>122.80</td>\n      <td>1001.0</td>\n      <td>0.11840</td>\n      <td>0.27760</td>\n      <td>0.3001</td>\n      <td>0.14710</td>\n      <td>0.2419</td>\n      <td>0.07871</td>\n      <td>...</td>\n      <td>25.38</td>\n      <td>17.33</td>\n      <td>184.60</td>\n      <td>2019.0</td>\n      <td>0.1622</td>\n      <td>0.6656</td>\n      <td>0.7119</td>\n      <td>0.2654</td>\n      <td>0.4601</td>\n      <td>0.11890</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>20.57</td>\n      <td>17.77</td>\n      <td>132.90</td>\n      <td>1326.0</td>\n      <td>0.08474</td>\n      <td>0.07864</td>\n      <td>0.0869</td>\n      <td>0.07017</td>\n      <td>0.1812</td>\n      <td>0.05667</td>\n      <td>...</td>\n      <td>24.99</td>\n      <td>23.41</td>\n      <td>158.80</td>\n      <td>1956.0</td>\n      <td>0.1238</td>\n      <td>0.1866</td>\n      <td>0.2416</td>\n      <td>0.1860</td>\n      <td>0.2750</td>\n      <td>0.08902</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>19.69</td>\n      <td>21.25</td>\n      <td>130.00</td>\n      <td>1203.0</td>\n      <td>0.10960</td>\n      <td>0.15990</td>\n      <td>0.1974</td>\n      <td>0.12790</td>\n      <td>0.2069</td>\n      <td>0.05999</td>\n      <td>...</td>\n      <td>23.57</td>\n      <td>25.53</td>\n      <td>152.50</td>\n      <td>1709.0</td>\n      <td>0.1444</td>\n      <td>0.4245</td>\n      <td>0.4504</td>\n      <td>0.2430</td>\n      <td>0.3613</td>\n      <td>0.08758</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>11.42</td>\n      <td>20.38</td>\n      <td>77.58</td>\n      <td>386.1</td>\n      <td>0.14250</td>\n      <td>0.28390</td>\n      <td>0.2414</td>\n      <td>0.10520</td>\n      <td>0.2597</td>\n      <td>0.09744</td>\n      <td>...</td>\n      <td>14.91</td>\n      <td>26.50</td>\n      <td>98.87</td>\n      <td>567.7</td>\n      <td>0.2098</td>\n      <td>0.8663</td>\n      <td>0.6869</td>\n      <td>0.2575</td>\n      <td>0.6638</td>\n      <td>0.17300</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>20.29</td>\n      <td>14.34</td>\n      <td>135.10</td>\n      <td>1297.0</td>\n      <td>0.10030</td>\n      <td>0.13280</td>\n      <td>0.1980</td>\n      <td>0.10430</td>\n      <td>0.1809</td>\n      <td>0.05883</td>\n      <td>...</td>\n      <td>22.54</td>\n      <td>16.67</td>\n      <td>152.20</td>\n      <td>1575.0</td>\n      <td>0.1374</td>\n      <td>0.2050</td>\n      <td>0.4000</td>\n      <td>0.1625</td>\n      <td>0.2364</td>\n      <td>0.07678</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 30 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"data_frame[\"label\"]=breast_cancer_data_set.target","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:41.814506Z","iopub.execute_input":"2024-06-18T17:25:41.815690Z","iopub.status.idle":"2024-06-18T17:25:41.822130Z","shell.execute_reply.started":"2024-06-18T17:25:41.815640Z","shell.execute_reply":"2024-06-18T17:25:41.820570Z"},"trusted":true},"execution_count":62,"outputs":[]},{"cell_type":"code","source":"data_frame.tail()","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:42.313489Z","iopub.execute_input":"2024-06-18T17:25:42.313940Z","iopub.status.idle":"2024-06-18T17:25:42.347950Z","shell.execute_reply.started":"2024-06-18T17:25:42.313909Z","shell.execute_reply":"2024-06-18T17:25:42.346072Z"},"trusted":true},"execution_count":63,"outputs":[{"execution_count":63,"output_type":"execute_result","data":{"text/plain":"     mean radius  mean texture  mean perimeter  mean area  mean smoothness  \\\n564        21.56         22.39          142.00     1479.0          0.11100   \n565        20.13         28.25          131.20     1261.0          0.09780   \n566        16.60         28.08          108.30      858.1          0.08455   \n567        20.60         29.33          140.10     1265.0          0.11780   \n568         7.76         24.54           47.92      181.0          0.05263   \n\n     mean compactness  mean concavity  mean concave points  mean symmetry  \\\n564           0.11590         0.24390              0.13890         0.1726   \n565           0.10340         0.14400              0.09791         0.1752   \n566           0.10230         0.09251              0.05302         0.1590   \n567           0.27700         0.35140              0.15200         0.2397   \n568           0.04362         0.00000              0.00000         0.1587   \n\n     mean fractal dimension  ...  worst texture  worst perimeter  worst area  \\\n564                 0.05623  ...          26.40           166.10      2027.0   \n565                 0.05533  ...          38.25           155.00      1731.0   \n566                 0.05648  ...          34.12           126.70      1124.0   \n567                 0.07016  ...          39.42           184.60      1821.0   \n568                 0.05884  ...          30.37            59.16       268.6   \n\n     worst smoothness  worst compactness  worst concavity  \\\n564           0.14100            0.21130           0.4107   \n565           0.11660            0.19220           0.3215   \n566           0.11390            0.30940           0.3403   \n567           0.16500            0.86810           0.9387   \n568           0.08996            0.06444           0.0000   \n\n     worst concave points  worst symmetry  worst fractal dimension  label  \n564                0.2216          0.2060                  0.07115      0  \n565                0.1628          0.2572                  0.06637      0  \n566                0.1418          0.2218                  0.07820      0  \n567                0.2650          0.4087                  0.12400      0  \n568                0.0000          0.2871                  0.07039      1  \n\n[5 rows x 31 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>mean radius</th>\n      <th>mean texture</th>\n      <th>mean perimeter</th>\n      <th>mean area</th>\n      <th>mean smoothness</th>\n      <th>mean compactness</th>\n      <th>mean concavity</th>\n      <th>mean concave points</th>\n      <th>mean symmetry</th>\n      <th>mean fractal dimension</th>\n      <th>...</th>\n      <th>worst texture</th>\n      <th>worst perimeter</th>\n      <th>worst area</th>\n      <th>worst smoothness</th>\n      <th>worst compactness</th>\n      <th>worst concavity</th>\n      <th>worst concave points</th>\n      <th>worst symmetry</th>\n      <th>worst fractal dimension</th>\n      <th>label</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>564</th>\n      <td>21.56</td>\n      <td>22.39</td>\n      <td>142.00</td>\n      <td>1479.0</td>\n      <td>0.11100</td>\n      <td>0.11590</td>\n      <td>0.24390</td>\n      <td>0.13890</td>\n      <td>0.1726</td>\n      <td>0.05623</td>\n      <td>...</td>\n      <td>26.40</td>\n      <td>166.10</td>\n      <td>2027.0</td>\n      <td>0.14100</td>\n      <td>0.21130</td>\n      <td>0.4107</td>\n      <td>0.2216</td>\n      <td>0.2060</td>\n      <td>0.07115</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>565</th>\n      <td>20.13</td>\n      <td>28.25</td>\n      <td>131.20</td>\n      <td>1261.0</td>\n      <td>0.09780</td>\n      <td>0.10340</td>\n      <td>0.14400</td>\n      <td>0.09791</td>\n      <td>0.1752</td>\n      <td>0.05533</td>\n      <td>...</td>\n      <td>38.25</td>\n      <td>155.00</td>\n      <td>1731.0</td>\n      <td>0.11660</td>\n      <td>0.19220</td>\n      <td>0.3215</td>\n      <td>0.1628</td>\n      <td>0.2572</td>\n      <td>0.06637</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>566</th>\n      <td>16.60</td>\n      <td>28.08</td>\n      <td>108.30</td>\n      <td>858.1</td>\n      <td>0.08455</td>\n      <td>0.10230</td>\n      <td>0.09251</td>\n      <td>0.05302</td>\n      <td>0.1590</td>\n      <td>0.05648</td>\n      <td>...</td>\n      <td>34.12</td>\n      <td>126.70</td>\n      <td>1124.0</td>\n      <td>0.11390</td>\n      <td>0.30940</td>\n      <td>0.3403</td>\n      <td>0.1418</td>\n      <td>0.2218</td>\n      <td>0.07820</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>567</th>\n      <td>20.60</td>\n      <td>29.33</td>\n      <td>140.10</td>\n      <td>1265.0</td>\n      <td>0.11780</td>\n      <td>0.27700</td>\n      <td>0.35140</td>\n      <td>0.15200</td>\n      <td>0.2397</td>\n      <td>0.07016</td>\n      <td>...</td>\n      <td>39.42</td>\n      <td>184.60</td>\n      <td>1821.0</td>\n      <td>0.16500</td>\n      <td>0.86810</td>\n      <td>0.9387</td>\n      <td>0.2650</td>\n      <td>0.4087</td>\n      <td>0.12400</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>568</th>\n      <td>7.76</td>\n      <td>24.54</td>\n      <td>47.92</td>\n      <td>181.0</td>\n      <td>0.05263</td>\n      <td>0.04362</td>\n      <td>0.00000</td>\n      <td>0.00000</td>\n      <td>0.1587</td>\n      <td>0.05884</td>\n      <td>...</td>\n      <td>30.37</td>\n      <td>59.16</td>\n      <td>268.6</td>\n      <td>0.08996</td>\n      <td>0.06444</td>\n      <td>0.0000</td>\n      <td>0.0000</td>\n      <td>0.2871</td>\n      <td>0.07039</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 31 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"data_frame.shape","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:42.766956Z","iopub.execute_input":"2024-06-18T17:25:42.767427Z","iopub.status.idle":"2024-06-18T17:25:42.776117Z","shell.execute_reply.started":"2024-06-18T17:25:42.767397Z","shell.execute_reply":"2024-06-18T17:25:42.774371Z"},"trusted":true},"execution_count":64,"outputs":[{"execution_count":64,"output_type":"execute_result","data":{"text/plain":"(569, 31)"},"metadata":{}}]},{"cell_type":"code","source":"data_frame.info()","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:43.215437Z","iopub.execute_input":"2024-06-18T17:25:43.215848Z","iopub.status.idle":"2024-06-18T17:25:43.236677Z","shell.execute_reply.started":"2024-06-18T17:25:43.215818Z","shell.execute_reply":"2024-06-18T17:25:43.234797Z"},"trusted":true},"execution_count":65,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 569 entries, 0 to 568\nData columns (total 31 columns):\n #   Column                   Non-Null Count  Dtype  \n---  ------                   --------------  -----  \n 0   mean radius              569 non-null    float64\n 1   mean texture             569 non-null    float64\n 2   mean perimeter           569 non-null    float64\n 3   mean area                569 non-null    float64\n 4   mean smoothness          569 non-null    float64\n 5   mean compactness         569 non-null    float64\n 6   mean concavity           569 non-null    float64\n 7   mean concave points      569 non-null    float64\n 8   mean symmetry            569 non-null    float64\n 9   mean fractal dimension   569 non-null    float64\n 10  radius error             569 non-null    float64\n 11  texture error            569 non-null    float64\n 12  perimeter error          569 non-null    float64\n 13  area error               569 non-null    float64\n 14  smoothness error         569 non-null    float64\n 15  compactness error        569 non-null    float64\n 16  concavity error          569 non-null    float64\n 17  concave points error     569 non-null    float64\n 18  symmetry error           569 non-null    float64\n 19  fractal dimension error  569 non-null    float64\n 20  worst radius             569 non-null    float64\n 21  worst texture            569 non-null    float64\n 22  worst perimeter          569 non-null    float64\n 23  worst area               569 non-null    float64\n 24  worst smoothness         569 non-null    float64\n 25  worst compactness        569 non-null    float64\n 26  worst concavity          569 non-null    float64\n 27  worst concave points     569 non-null    float64\n 28  worst symmetry           569 non-null    float64\n 29  worst fractal dimension  569 non-null    float64\n 30  label                    569 non-null    int64  \ndtypes: float64(30), int64(1)\nmemory usage: 137.9 KB\n","output_type":"stream"}]},{"cell_type":"code","source":"data_frame.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:43.793023Z","iopub.execute_input":"2024-06-18T17:25:43.794025Z","iopub.status.idle":"2024-06-18T17:25:43.804600Z","shell.execute_reply.started":"2024-06-18T17:25:43.793985Z","shell.execute_reply":"2024-06-18T17:25:43.803441Z"},"trusted":true},"execution_count":66,"outputs":[{"execution_count":66,"output_type":"execute_result","data":{"text/plain":"mean radius                0\nmean texture               0\nmean perimeter             0\nmean area                  0\nmean smoothness            0\nmean compactness           0\nmean concavity             0\nmean concave points        0\nmean symmetry              0\nmean fractal dimension     0\nradius error               0\ntexture error              0\nperimeter error            0\narea error                 0\nsmoothness error           0\ncompactness error          0\nconcavity error            0\nconcave points error       0\nsymmetry error             0\nfractal dimension error    0\nworst radius               0\nworst texture              0\nworst perimeter            0\nworst area                 0\nworst smoothness           0\nworst compactness          0\nworst concavity            0\nworst concave points       0\nworst symmetry             0\nworst fractal dimension    0\nlabel                      0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"data_frame.describe()","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:44.314524Z","iopub.execute_input":"2024-06-18T17:25:44.315006Z","iopub.status.idle":"2024-06-18T17:25:44.412423Z","shell.execute_reply.started":"2024-06-18T17:25:44.314971Z","shell.execute_reply":"2024-06-18T17:25:44.411055Z"},"trusted":true},"execution_count":67,"outputs":[{"execution_count":67,"output_type":"execute_result","data":{"text/plain":"       mean radius  mean texture  mean perimeter    mean area  \\\ncount   569.000000    569.000000      569.000000   569.000000   \nmean     14.127292     19.289649       91.969033   654.889104   \nstd       3.524049      4.301036       24.298981   351.914129   \nmin       6.981000      9.710000       43.790000   143.500000   \n25%      11.700000     16.170000       75.170000   420.300000   \n50%      13.370000     18.840000       86.240000   551.100000   \n75%      15.780000     21.800000      104.100000   782.700000   \nmax      28.110000     39.280000      188.500000  2501.000000   \n\n       mean smoothness  mean compactness  mean concavity  mean concave points  \\\ncount       569.000000        569.000000      569.000000           569.000000   \nmean          0.096360          0.104341        0.088799             0.048919   \nstd           0.014064          0.052813        0.079720             0.038803   \nmin           0.052630          0.019380        0.000000             0.000000   \n25%           0.086370          0.064920        0.029560             0.020310   \n50%           0.095870          0.092630        0.061540             0.033500   \n75%           0.105300          0.130400        0.130700             0.074000   \nmax           0.163400          0.345400        0.426800             0.201200   \n\n       mean symmetry  mean fractal dimension  ...  worst texture  \\\ncount     569.000000              569.000000  ...     569.000000   \nmean        0.181162                0.062798  ...      25.677223   \nstd         0.027414                0.007060  ...       6.146258   \nmin         0.106000                0.049960  ...      12.020000   \n25%         0.161900                0.057700  ...      21.080000   \n50%         0.179200                0.061540  ...      25.410000   \n75%         0.195700                0.066120  ...      29.720000   \nmax         0.304000                0.097440  ...      49.540000   \n\n       worst perimeter   worst area  worst smoothness  worst compactness  \\\ncount       569.000000   569.000000        569.000000         569.000000   \nmean        107.261213   880.583128          0.132369           0.254265   \nstd          33.602542   569.356993          0.022832           0.157336   \nmin          50.410000   185.200000          0.071170           0.027290   \n25%          84.110000   515.300000          0.116600           0.147200   \n50%          97.660000   686.500000          0.131300           0.211900   \n75%         125.400000  1084.000000          0.146000           0.339100   \nmax         251.200000  4254.000000          0.222600           1.058000   \n\n       worst concavity  worst concave points  worst symmetry  \\\ncount       569.000000            569.000000      569.000000   \nmean          0.272188              0.114606        0.290076   \nstd           0.208624              0.065732        0.061867   \nmin           0.000000              0.000000        0.156500   \n25%           0.114500              0.064930        0.250400   \n50%           0.226700              0.099930        0.282200   \n75%           0.382900              0.161400        0.317900   \nmax           1.252000              0.291000        0.663800   \n\n       worst fractal dimension       label  \ncount               569.000000  569.000000  \nmean                  0.083946    0.627417  \nstd                   0.018061    0.483918  \nmin                   0.055040    0.000000  \n25%                   0.071460    0.000000  \n50%                   0.080040    1.000000  \n75%                   0.092080    1.000000  \nmax                   0.207500    1.000000  \n\n[8 rows x 31 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>mean radius</th>\n      <th>mean texture</th>\n      <th>mean perimeter</th>\n      <th>mean area</th>\n      <th>mean smoothness</th>\n      <th>mean compactness</th>\n      <th>mean concavity</th>\n      <th>mean concave points</th>\n      <th>mean symmetry</th>\n      <th>mean fractal dimension</th>\n      <th>...</th>\n      <th>worst texture</th>\n      <th>worst perimeter</th>\n      <th>worst area</th>\n      <th>worst smoothness</th>\n      <th>worst compactness</th>\n      <th>worst concavity</th>\n      <th>worst concave points</th>\n      <th>worst symmetry</th>\n      <th>worst fractal dimension</th>\n      <th>label</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>569.000000</td>\n      <td>569.000000</td>\n      <td>569.000000</td>\n      <td>569.000000</td>\n      <td>569.000000</td>\n      <td>569.000000</td>\n      <td>569.000000</td>\n      <td>569.000000</td>\n      <td>569.000000</td>\n      <td>569.000000</td>\n      <td>...</td>\n      <td>569.000000</td>\n      <td>569.000000</td>\n      <td>569.000000</td>\n      <td>569.000000</td>\n      <td>569.000000</td>\n      <td>569.000000</td>\n      <td>569.000000</td>\n      <td>569.000000</td>\n      <td>569.000000</td>\n      <td>569.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>14.127292</td>\n      <td>19.289649</td>\n      <td>91.969033</td>\n      <td>654.889104</td>\n      <td>0.096360</td>\n      <td>0.104341</td>\n      <td>0.088799</td>\n      <td>0.048919</td>\n      <td>0.181162</td>\n      <td>0.062798</td>\n      <td>...</td>\n      <td>25.677223</td>\n      <td>107.261213</td>\n      <td>880.583128</td>\n      <td>0.132369</td>\n      <td>0.254265</td>\n      <td>0.272188</td>\n      <td>0.114606</td>\n      <td>0.290076</td>\n      <td>0.083946</td>\n      <td>0.627417</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>3.524049</td>\n      <td>4.301036</td>\n      <td>24.298981</td>\n      <td>351.914129</td>\n      <td>0.014064</td>\n      <td>0.052813</td>\n      <td>0.079720</td>\n      <td>0.038803</td>\n      <td>0.027414</td>\n      <td>0.007060</td>\n      <td>...</td>\n      <td>6.146258</td>\n      <td>33.602542</td>\n      <td>569.356993</td>\n      <td>0.022832</td>\n      <td>0.157336</td>\n      <td>0.208624</td>\n      <td>0.065732</td>\n      <td>0.061867</td>\n      <td>0.018061</td>\n      <td>0.483918</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>6.981000</td>\n      <td>9.710000</td>\n      <td>43.790000</td>\n      <td>143.500000</td>\n      <td>0.052630</td>\n      <td>0.019380</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.106000</td>\n      <td>0.049960</td>\n      <td>...</td>\n      <td>12.020000</td>\n      <td>50.410000</td>\n      <td>185.200000</td>\n      <td>0.071170</td>\n      <td>0.027290</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.156500</td>\n      <td>0.055040</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>11.700000</td>\n      <td>16.170000</td>\n      <td>75.170000</td>\n      <td>420.300000</td>\n      <td>0.086370</td>\n      <td>0.064920</td>\n      <td>0.029560</td>\n      <td>0.020310</td>\n      <td>0.161900</td>\n      <td>0.057700</td>\n      <td>...</td>\n      <td>21.080000</td>\n      <td>84.110000</td>\n      <td>515.300000</td>\n      <td>0.116600</td>\n      <td>0.147200</td>\n      <td>0.114500</td>\n      <td>0.064930</td>\n      <td>0.250400</td>\n      <td>0.071460</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>13.370000</td>\n      <td>18.840000</td>\n      <td>86.240000</td>\n      <td>551.100000</td>\n      <td>0.095870</td>\n      <td>0.092630</td>\n      <td>0.061540</td>\n      <td>0.033500</td>\n      <td>0.179200</td>\n      <td>0.061540</td>\n      <td>...</td>\n      <td>25.410000</td>\n      <td>97.660000</td>\n      <td>686.500000</td>\n      <td>0.131300</td>\n      <td>0.211900</td>\n      <td>0.226700</td>\n      <td>0.099930</td>\n      <td>0.282200</td>\n      <td>0.080040</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>15.780000</td>\n      <td>21.800000</td>\n      <td>104.100000</td>\n      <td>782.700000</td>\n      <td>0.105300</td>\n      <td>0.130400</td>\n      <td>0.130700</td>\n      <td>0.074000</td>\n      <td>0.195700</td>\n      <td>0.066120</td>\n      <td>...</td>\n      <td>29.720000</td>\n      <td>125.400000</td>\n      <td>1084.000000</td>\n      <td>0.146000</td>\n      <td>0.339100</td>\n      <td>0.382900</td>\n      <td>0.161400</td>\n      <td>0.317900</td>\n      <td>0.092080</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>28.110000</td>\n      <td>39.280000</td>\n      <td>188.500000</td>\n      <td>2501.000000</td>\n      <td>0.163400</td>\n      <td>0.345400</td>\n      <td>0.426800</td>\n      <td>0.201200</td>\n      <td>0.304000</td>\n      <td>0.097440</td>\n      <td>...</td>\n      <td>49.540000</td>\n      <td>251.200000</td>\n      <td>4254.000000</td>\n      <td>0.222600</td>\n      <td>1.058000</td>\n      <td>1.252000</td>\n      <td>0.291000</td>\n      <td>0.663800</td>\n      <td>0.207500</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n<p>8 rows × 31 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"data_frame[\"label\"].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:44.797715Z","iopub.execute_input":"2024-06-18T17:25:44.798186Z","iopub.status.idle":"2024-06-18T17:25:44.809237Z","shell.execute_reply.started":"2024-06-18T17:25:44.798153Z","shell.execute_reply":"2024-06-18T17:25:44.807483Z"},"trusted":true},"execution_count":68,"outputs":[{"execution_count":68,"output_type":"execute_result","data":{"text/plain":"label\n1    357\n0    212\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"data_frame.groupby(\"label\").mean()","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:45.432633Z","iopub.execute_input":"2024-06-18T17:25:45.433991Z","iopub.status.idle":"2024-06-18T17:25:45.465107Z","shell.execute_reply.started":"2024-06-18T17:25:45.433939Z","shell.execute_reply":"2024-06-18T17:25:45.463469Z"},"trusted":true},"execution_count":69,"outputs":[{"execution_count":69,"output_type":"execute_result","data":{"text/plain":"       mean radius  mean texture  mean perimeter   mean area  mean smoothness  \\\nlabel                                                                           \n0        17.462830     21.604906      115.365377  978.376415         0.102898   \n1        12.146524     17.914762       78.075406  462.790196         0.092478   \n\n       mean compactness  mean concavity  mean concave points  mean symmetry  \\\nlabel                                                                         \n0              0.145188        0.160775             0.087990       0.192909   \n1              0.080085        0.046058             0.025717       0.174186   \n\n       mean fractal dimension  ...  worst radius  worst texture  \\\nlabel                          ...                                \n0                    0.062680  ...     21.134811      29.318208   \n1                    0.062867  ...     13.379801      23.515070   \n\n       worst perimeter   worst area  worst smoothness  worst compactness  \\\nlabel                                                                      \n0           141.370330  1422.286321          0.144845           0.374824   \n1            87.005938   558.899440          0.124959           0.182673   \n\n       worst concavity  worst concave points  worst symmetry  \\\nlabel                                                          \n0             0.450606              0.182237        0.323468   \n1             0.166238              0.074444        0.270246   \n\n       worst fractal dimension  \nlabel                           \n0                     0.091530  \n1                     0.079442  \n\n[2 rows x 30 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>mean radius</th>\n      <th>mean texture</th>\n      <th>mean perimeter</th>\n      <th>mean area</th>\n      <th>mean smoothness</th>\n      <th>mean compactness</th>\n      <th>mean concavity</th>\n      <th>mean concave points</th>\n      <th>mean symmetry</th>\n      <th>mean fractal dimension</th>\n      <th>...</th>\n      <th>worst radius</th>\n      <th>worst texture</th>\n      <th>worst perimeter</th>\n      <th>worst area</th>\n      <th>worst smoothness</th>\n      <th>worst compactness</th>\n      <th>worst concavity</th>\n      <th>worst concave points</th>\n      <th>worst symmetry</th>\n      <th>worst fractal dimension</th>\n    </tr>\n    <tr>\n      <th>label</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>17.462830</td>\n      <td>21.604906</td>\n      <td>115.365377</td>\n      <td>978.376415</td>\n      <td>0.102898</td>\n      <td>0.145188</td>\n      <td>0.160775</td>\n      <td>0.087990</td>\n      <td>0.192909</td>\n      <td>0.062680</td>\n      <td>...</td>\n      <td>21.134811</td>\n      <td>29.318208</td>\n      <td>141.370330</td>\n      <td>1422.286321</td>\n      <td>0.144845</td>\n      <td>0.374824</td>\n      <td>0.450606</td>\n      <td>0.182237</td>\n      <td>0.323468</td>\n      <td>0.091530</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>12.146524</td>\n      <td>17.914762</td>\n      <td>78.075406</td>\n      <td>462.790196</td>\n      <td>0.092478</td>\n      <td>0.080085</td>\n      <td>0.046058</td>\n      <td>0.025717</td>\n      <td>0.174186</td>\n      <td>0.062867</td>\n      <td>...</td>\n      <td>13.379801</td>\n      <td>23.515070</td>\n      <td>87.005938</td>\n      <td>558.899440</td>\n      <td>0.124959</td>\n      <td>0.182673</td>\n      <td>0.166238</td>\n      <td>0.074444</td>\n      <td>0.270246</td>\n      <td>0.079442</td>\n    </tr>\n  </tbody>\n</table>\n<p>2 rows × 30 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"X=data_frame.drop(columns=\"label\" ,axis=1)\nY=data_frame[\"label\"]","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:46.060354Z","iopub.execute_input":"2024-06-18T17:25:46.060751Z","iopub.status.idle":"2024-06-18T17:25:46.069494Z","shell.execute_reply.started":"2024-06-18T17:25:46.060719Z","shell.execute_reply":"2024-06-18T17:25:46.068145Z"},"trusted":true},"execution_count":70,"outputs":[]},{"cell_type":"code","source":"print(X)\n\n","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:46.684068Z","iopub.execute_input":"2024-06-18T17:25:46.684507Z","iopub.status.idle":"2024-06-18T17:25:46.708902Z","shell.execute_reply.started":"2024-06-18T17:25:46.684478Z","shell.execute_reply":"2024-06-18T17:25:46.707323Z"},"trusted":true},"execution_count":71,"outputs":[{"name":"stdout","text":"     mean radius  mean texture  mean perimeter  mean area  mean smoothness  \\\n0          17.99         10.38          122.80     1001.0          0.11840   \n1          20.57         17.77          132.90     1326.0          0.08474   \n2          19.69         21.25          130.00     1203.0          0.10960   \n3          11.42         20.38           77.58      386.1          0.14250   \n4          20.29         14.34          135.10     1297.0          0.10030   \n..           ...           ...             ...        ...              ...   \n564        21.56         22.39          142.00     1479.0          0.11100   \n565        20.13         28.25          131.20     1261.0          0.09780   \n566        16.60         28.08          108.30      858.1          0.08455   \n567        20.60         29.33          140.10     1265.0          0.11780   \n568         7.76         24.54           47.92      181.0          0.05263   \n\n     mean compactness  mean concavity  mean concave points  mean symmetry  \\\n0             0.27760         0.30010              0.14710         0.2419   \n1             0.07864         0.08690              0.07017         0.1812   \n2             0.15990         0.19740              0.12790         0.2069   \n3             0.28390         0.24140              0.10520         0.2597   \n4             0.13280         0.19800              0.10430         0.1809   \n..                ...             ...                  ...            ...   \n564           0.11590         0.24390              0.13890         0.1726   \n565           0.10340         0.14400              0.09791         0.1752   \n566           0.10230         0.09251              0.05302         0.1590   \n567           0.27700         0.35140              0.15200         0.2397   \n568           0.04362         0.00000              0.00000         0.1587   \n\n     mean fractal dimension  ...  worst radius  worst texture  \\\n0                   0.07871  ...        25.380          17.33   \n1                   0.05667  ...        24.990          23.41   \n2                   0.05999  ...        23.570          25.53   \n3                   0.09744  ...        14.910          26.50   \n4                   0.05883  ...        22.540          16.67   \n..                      ...  ...           ...            ...   \n564                 0.05623  ...        25.450          26.40   \n565                 0.05533  ...        23.690          38.25   \n566                 0.05648  ...        18.980          34.12   \n567                 0.07016  ...        25.740          39.42   \n568                 0.05884  ...         9.456          30.37   \n\n     worst perimeter  worst area  worst smoothness  worst compactness  \\\n0             184.60      2019.0           0.16220            0.66560   \n1             158.80      1956.0           0.12380            0.18660   \n2             152.50      1709.0           0.14440            0.42450   \n3              98.87       567.7           0.20980            0.86630   \n4             152.20      1575.0           0.13740            0.20500   \n..               ...         ...               ...                ...   \n564           166.10      2027.0           0.14100            0.21130   \n565           155.00      1731.0           0.11660            0.19220   \n566           126.70      1124.0           0.11390            0.30940   \n567           184.60      1821.0           0.16500            0.86810   \n568            59.16       268.6           0.08996            0.06444   \n\n     worst concavity  worst concave points  worst symmetry  \\\n0             0.7119                0.2654          0.4601   \n1             0.2416                0.1860          0.2750   \n2             0.4504                0.2430          0.3613   \n3             0.6869                0.2575          0.6638   \n4             0.4000                0.1625          0.2364   \n..               ...                   ...             ...   \n564           0.4107                0.2216          0.2060   \n565           0.3215                0.1628          0.2572   \n566           0.3403                0.1418          0.2218   \n567           0.9387                0.2650          0.4087   \n568           0.0000                0.0000          0.2871   \n\n     worst fractal dimension  \n0                    0.11890  \n1                    0.08902  \n2                    0.08758  \n3                    0.17300  \n4                    0.07678  \n..                       ...  \n564                  0.07115  \n565                  0.06637  \n566                  0.07820  \n567                  0.12400  \n568                  0.07039  \n\n[569 rows x 30 columns]\n","output_type":"stream"}]},{"cell_type":"code","source":"print(Y)","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:47.311352Z","iopub.execute_input":"2024-06-18T17:25:47.311756Z","iopub.status.idle":"2024-06-18T17:25:47.320523Z","shell.execute_reply.started":"2024-06-18T17:25:47.311727Z","shell.execute_reply":"2024-06-18T17:25:47.318880Z"},"trusted":true},"execution_count":72,"outputs":[{"name":"stdout","text":"0      0\n1      0\n2      0\n3      0\n4      0\n      ..\n564    0\n565    0\n566    0\n567    0\n568    1\nName: label, Length: 569, dtype: int64\n","output_type":"stream"}]},{"cell_type":"code","source":"X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=2)","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:47.888747Z","iopub.execute_input":"2024-06-18T17:25:47.889130Z","iopub.status.idle":"2024-06-18T17:25:47.898721Z","shell.execute_reply.started":"2024-06-18T17:25:47.889103Z","shell.execute_reply":"2024-06-18T17:25:47.897416Z"},"trusted":true},"execution_count":73,"outputs":[]},{"cell_type":"code","source":"print(X.shape,X_train.shape,X_test.shape)","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:48.443492Z","iopub.execute_input":"2024-06-18T17:25:48.443929Z","iopub.status.idle":"2024-06-18T17:25:48.450898Z","shell.execute_reply.started":"2024-06-18T17:25:48.443900Z","shell.execute_reply":"2024-06-18T17:25:48.449299Z"},"trusted":true},"execution_count":74,"outputs":[{"name":"stdout","text":"(569, 30) (455, 30) (114, 30)\n","output_type":"stream"}]},{"cell_type":"code","source":"import tensorflow as tf","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:49.226569Z","iopub.execute_input":"2024-06-18T17:25:49.227015Z","iopub.status.idle":"2024-06-18T17:25:49.233700Z","shell.execute_reply.started":"2024-06-18T17:25:49.226985Z","shell.execute_reply":"2024-06-18T17:25:49.232009Z"},"trusted":true},"execution_count":75,"outputs":[]},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from  sklearn.preprocessing import StandardScaler","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:50.675216Z","iopub.execute_input":"2024-06-18T17:25:50.675717Z","iopub.status.idle":"2024-06-18T17:25:50.681906Z","shell.execute_reply.started":"2024-06-18T17:25:50.675685Z","shell.execute_reply":"2024-06-18T17:25:50.680384Z"},"trusted":true},"execution_count":76,"outputs":[]},{"cell_type":"code","source":"scalar=StandardScaler()\nX_train_std=scalar.fit_transform(X_train)\nX_test_std=scalar.transform(X_test)\n\nprint(X_train_std)\n","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:51.267455Z","iopub.execute_input":"2024-06-18T17:25:51.267892Z","iopub.status.idle":"2024-06-18T17:25:51.284532Z","shell.execute_reply.started":"2024-06-18T17:25:51.267860Z","shell.execute_reply":"2024-06-18T17:25:51.283026Z"},"trusted":true},"execution_count":77,"outputs":[{"name":"stdout","text":"[[-0.01330339  1.7757658  -0.01491962 ... -0.13236958 -1.08014517\n  -0.03527943]\n [-0.8448276  -0.6284278  -0.87702746 ... -1.11552632 -0.85773964\n  -0.72098905]\n [ 1.44755936  0.71180168  1.47428816 ...  0.87583964  0.4967602\n   0.46321706]\n ...\n [-0.46608541 -1.49375484 -0.53234924 ... -1.32388956 -1.02997851\n  -0.75145272]\n [-0.50025764 -1.62161319 -0.527814   ... -0.0987626   0.35796577\n  -0.43906159]\n [ 0.96060511  1.21181916  1.00427242 ...  0.8956983  -1.23064515\n   0.50697397]]\n","output_type":"stream"}]},{"cell_type":"code","source":"import tensorflow as tf\ntf.random.set_seed(3)\nfrom tensorflow import keras","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:52.027948Z","iopub.execute_input":"2024-06-18T17:25:52.028606Z","iopub.status.idle":"2024-06-18T17:25:52.050714Z","shell.execute_reply.started":"2024-06-18T17:25:52.028558Z","shell.execute_reply":"2024-06-18T17:25:52.049093Z"},"trusted":true},"execution_count":78,"outputs":[]},{"cell_type":"code","source":"model=keras.Sequential([\n    keras.layers.Flatten(input_shape=(30,)),\n    keras.layers.Dense(20,activation=\"relu\"),\n    keras.layers.Dense(2,activation=\"sigmoid\")\n])","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:52.567006Z","iopub.execute_input":"2024-06-18T17:25:52.567435Z","iopub.status.idle":"2024-06-18T17:25:52.613449Z","shell.execute_reply.started":"2024-06-18T17:25:52.567402Z","shell.execute_reply":"2024-06-18T17:25:52.612084Z"},"trusted":true},"execution_count":79,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/reshaping/flatten.py:37: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(**kwargs)\n","output_type":"stream"}]},{"cell_type":"code","source":"model.compile(\n    optimizer=\"adam\",\n    loss=\"sparse_categorical_crossentropy\",\n    metrics=[\"accuracy\"]\n)\n","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:53.207567Z","iopub.execute_input":"2024-06-18T17:25:53.208035Z","iopub.status.idle":"2024-06-18T17:25:53.229040Z","shell.execute_reply.started":"2024-06-18T17:25:53.208004Z","shell.execute_reply":"2024-06-18T17:25:53.227595Z"},"trusted":true},"execution_count":80,"outputs":[]},{"cell_type":"code","source":"history=model.fit(X_train_std,Y_train,validation_split=0.1,epochs=10)","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:53.795797Z","iopub.execute_input":"2024-06-18T17:25:53.796320Z","iopub.status.idle":"2024-06-18T17:25:55.814795Z","shell.execute_reply.started":"2024-06-18T17:25:53.796285Z","shell.execute_reply":"2024-06-18T17:25:55.813563Z"},"trusted":true},"execution_count":81,"outputs":[{"name":"stdout","text":"Epoch 1/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 21ms/step - accuracy: 0.6261 - loss: 0.7287 - val_accuracy: 0.8043 - val_loss: 0.4504\nEpoch 2/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8552 - loss: 0.4755 - val_accuracy: 0.9565 - val_loss: 0.2935\nEpoch 3/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8983 - loss: 0.3342 - val_accuracy: 0.9565 - val_loss: 0.2213\nEpoch 4/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9246 - loss: 0.2574 - val_accuracy: 0.9565 - val_loss: 0.1838\nEpoch 5/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9418 - loss: 0.2113 - val_accuracy: 0.9565 - val_loss: 0.1607\nEpoch 6/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9516 - loss: 0.1805 - val_accuracy: 0.9565 - val_loss: 0.1447\nEpoch 7/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9560 - loss: 0.1584 - val_accuracy: 0.9565 - val_loss: 0.1328\nEpoch 8/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9683 - loss: 0.1420 - val_accuracy: 0.9565 - val_loss: 0.1234\nEpoch 9/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9733 - loss: 0.1295 - val_accuracy: 0.9565 - val_loss: 0.1156\nEpoch 10/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9784 - loss: 0.1194 - val_accuracy: 0.9565 - val_loss: 0.1090\n","output_type":"stream"}]},{"cell_type":"code","source":"plt.plot(history.history[\"accuracy\"])\nplt.plot(history.history[\"val_accuracy\"])\n\nplt.title(\"Model Accurracy\")\nplt.ylabel(\"accuracy\")\nplt.xlabel(\"epoch\")\nplt.legend([\"training data\",\"validation data\"],loc=\"lower right\")\n","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:55.817951Z","iopub.execute_input":"2024-06-18T17:25:55.818382Z","iopub.status.idle":"2024-06-18T17:25:56.205939Z","shell.execute_reply.started":"2024-06-18T17:25:55.818349Z","shell.execute_reply":"2024-06-18T17:25:56.204528Z"},"trusted":true},"execution_count":82,"outputs":[{"execution_count":82,"output_type":"execute_result","data":{"text/plain":"<matplotlib.legend.Legend at 0x7ad522722a70>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"plt.plot(history.history[\"loss\"])\nplt.plot(history.history[\"val_loss\"])\n\nplt.title(\"Model Loss\")\nplt.ylabel(\"Loss\")\nplt.xlabel(\"epoch\")\nplt.legend([\"training loss\",\"validation loss\"],loc=\"lower right\")\n","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:56.208060Z","iopub.execute_input":"2024-06-18T17:25:56.208564Z","iopub.status.idle":"2024-06-18T17:25:56.590192Z","shell.execute_reply.started":"2024-06-18T17:25:56.208519Z","shell.execute_reply":"2024-06-18T17:25:56.588850Z"},"trusted":true},"execution_count":83,"outputs":[{"execution_count":83,"output_type":"execute_result","data":{"text/plain":"<matplotlib.legend.Legend at 0x7ad5222d1090>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"loss,accuracy=model.evaluate(X_test_std,Y_test)\nprint(\"Loss\",loss)\nprint(\"Accuracy\",accuracy)","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:57.303752Z","iopub.execute_input":"2024-06-18T17:25:57.304194Z","iopub.status.idle":"2024-06-18T17:25:57.415332Z","shell.execute_reply.started":"2024-06-18T17:25:57.304161Z","shell.execute_reply":"2024-06-18T17:25:57.413872Z"},"trusted":true},"execution_count":84,"outputs":[{"name":"stdout","text":"\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9647 - loss: 0.1192 \nLoss 0.12748835980892181\nAccuracy 0.9561403393745422\n","output_type":"stream"}]},{"cell_type":"code","source":"print(X_test_std.shape)\nprint(X_test_std[0])","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:58.037560Z","iopub.execute_input":"2024-06-18T17:25:58.038029Z","iopub.status.idle":"2024-06-18T17:25:58.046319Z","shell.execute_reply.started":"2024-06-18T17:25:58.037997Z","shell.execute_reply":"2024-06-18T17:25:58.044801Z"},"trusted":true},"execution_count":85,"outputs":[{"name":"stdout","text":"(114, 30)\n[-0.04462793 -1.41612656 -0.05903514 -0.16234067  2.0202457  -0.11323672\n  0.18500609  0.47102419  0.63336386  0.26335737  0.53209124  2.62763999\n  0.62351167  0.11405261  1.01246781  0.41126289  0.63848593  2.88971815\n -0.41675911  0.74270853 -0.32983699 -1.67435595 -0.36854552 -0.38767294\n  0.32655007 -0.74858917 -0.54689089 -0.18278004 -1.23064515 -0.6268286 ]\n","output_type":"stream"}]},{"cell_type":"code","source":"Y_pred=model.predict(X_test_std)","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:58.756658Z","iopub.execute_input":"2024-06-18T17:25:58.757142Z","iopub.status.idle":"2024-06-18T17:25:58.927111Z","shell.execute_reply.started":"2024-06-18T17:25:58.757106Z","shell.execute_reply":"2024-06-18T17:25:58.925826Z"},"trusted":true},"execution_count":86,"outputs":[{"name":"stdout","text":"\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 12ms/step\n","output_type":"stream"}]},{"cell_type":"code","source":"print (Y_pred.shape)\nprint(Y_pred[0])","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:25:59.444527Z","iopub.execute_input":"2024-06-18T17:25:59.444946Z","iopub.status.idle":"2024-06-18T17:25:59.452793Z","shell.execute_reply.started":"2024-06-18T17:25:59.444914Z","shell.execute_reply":"2024-06-18T17:25:59.451503Z"},"trusted":true},"execution_count":87,"outputs":[{"name":"stdout","text":"(114, 2)\n[0.21663363 0.7661083 ]\n","output_type":"stream"}]},{"cell_type":"code","source":"print(X_test_std[0])","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:29:48.578193Z","iopub.execute_input":"2024-06-18T17:29:48.578632Z","iopub.status.idle":"2024-06-18T17:29:48.586153Z","shell.execute_reply.started":"2024-06-18T17:29:48.578601Z","shell.execute_reply":"2024-06-18T17:29:48.584359Z"},"trusted":true},"execution_count":101,"outputs":[{"name":"stdout","text":"[-0.04462793 -1.41612656 -0.05903514 -0.16234067  2.0202457  -0.11323672\n  0.18500609  0.47102419  0.63336386  0.26335737  0.53209124  2.62763999\n  0.62351167  0.11405261  1.01246781  0.41126289  0.63848593  2.88971815\n -0.41675911  0.74270853 -0.32983699 -1.67435595 -0.36854552 -0.38767294\n  0.32655007 -0.74858917 -0.54689089 -0.18278004 -1.23064515 -0.6268286 ]\n","output_type":"stream"}]},{"cell_type":"code","source":"print(Y)","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:26:00.628926Z","iopub.execute_input":"2024-06-18T17:26:00.629368Z","iopub.status.idle":"2024-06-18T17:26:00.637069Z","shell.execute_reply.started":"2024-06-18T17:26:00.629338Z","shell.execute_reply":"2024-06-18T17:26:00.635787Z"},"trusted":true},"execution_count":89,"outputs":[{"name":"stdout","text":"0      0\n1      0\n2      0\n3      0\n4      0\n      ..\n564    0\n565    0\n566    0\n567    0\n568    1\nName: label, Length: 569, dtype: int64\n","output_type":"stream"}]},{"cell_type":"code","source":"Y_pred_labels=[np.argmax(i) for i in Y_pred]\nprint(Y_pred_labels)","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:26:01.183371Z","iopub.execute_input":"2024-06-18T17:26:01.183878Z","iopub.status.idle":"2024-06-18T17:26:01.193794Z","shell.execute_reply.started":"2024-06-18T17:26:01.183841Z","shell.execute_reply":"2024-06-18T17:26:01.192059Z"},"trusted":true},"execution_count":90,"outputs":[{"name":"stdout","text":"[1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0]\n","output_type":"stream"}]},{"cell_type":"code","source":"\n\n#     Add your input data here\n\n\n\n# input_data = (\n# 13.73,22.61,93.6,578.3,0.1131,0.2293,0.2128,0.08025,0.2069,0.07682,0.2121,1.169,2.061,19.21,0.006429,0.05936,0.05501,0.01628,0.01961,0.008093,15.03,32.01,108.8,697.7,0.1651,0.7725,0.6943,0.2208,0.3596,0.1431\n# )\n# input_data_as_numpy_array=np.asarray(input_data)\n# input_data_reshaped=input_data_as_numpy_array.reshape(-1,1)\n\n# input_data_std=scalar.transform(input_data_reshaped)\n\n# predication=model.predict(input_data_std)\n\n\n# if(prediction_label[0]==0):\n#     print(\"Tumor is malignant\")\n# else:\n#     print(\"Tumor is banign\")\n ","metadata":{"execution":{"iopub.status.busy":"2024-06-18T17:40:44.729322Z","iopub.execute_input":"2024-06-18T17:40:44.730435Z","iopub.status.idle":"2024-06-18T17:40:44.737066Z","shell.execute_reply.started":"2024-06-18T17:40:44.730392Z","shell.execute_reply":"2024-06-18T17:40:44.735238Z"},"trusted":true},"execution_count":109,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}